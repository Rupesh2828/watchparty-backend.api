// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  username     String
  email        String       @unique
  password     String
  avatar       String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime?    @updatedAt
  refreshToken String?
  participants WatchParty[] @relation("Participants")
  watchParties WatchParty[]
  webcamSlot   WebcamSlot[]
  chatMessages ChatMessage[]
}

model WatchParty {
  id           Int          @id @default(autoincrement())
  title        String
  description  String
  hostId       Int
  host         User         @relation(fields: [hostId], references: [id])
  participants User[]       @relation("Participants")
  videoUrl     String
  startTime    DateTime?
  endTime      DateTime?
  isLive       Boolean      @default(false)
  chatMessages ChatMessage[]
  webcamSlots   WebcamSlot[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model WebcamSlot {
  
  id           Int        @id @default(autoincrement())
  watchPartyId Int
  watchParty   WatchParty @relation(fields: [watchPartyId], references: [id])
  userId       Int?
  user         User?      @relation(fields: [userId], references: [id])
  isActive     Boolean    @default(false)
  slotNumber   Int       // 1, 2, or 3 (host is always 1)
  createdAt    DateTime   @default(now())
}

model ChatMessage {
  id             Int        @id @default(autoincrement())
  watchPartyId   Int
  watchParty     WatchParty @relation(fields: [watchPartyId], references: [id])
  userId         Int
  user           User       @relation(fields: [userId], references: [id])
  message        String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime?  @updatedAt

}